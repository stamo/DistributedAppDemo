// <auto-generated />
using Cinema.HallManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Cinema.HallManager.Migrations
{
    [DbContext(typeof(HallsDbContext))]
    [Migration("20250407202343_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Cinema.HallManager.Data.Models.CinemaTheatre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasComment("Record identifier");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("city")
                        .HasComment("Cinema location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name")
                        .HasComment("Cinema name");

                    b.HasKey("Id")
                        .HasName("pk_cinemas");

                    b.ToTable("cinemas", null, t =>
                        {
                            t.HasComment("Cinema Theatres");
                        });
                });

            modelBuilder.Entity("Cinema.HallManager.Data.Models.Hall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasComment("Record identifier");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CinemaId")
                        .HasColumnType("integer")
                        .HasColumnName("cinema_id")
                        .HasComment("Identifier of the cinema");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name")
                        .HasComment("Hall name");

                    b.Property<int>("Seats")
                        .HasColumnType("integer")
                        .HasColumnName("seats")
                        .HasComment("Number of seats in the hall");

                    b.HasKey("Id")
                        .HasName("pk_halls");

                    b.HasIndex("CinemaId")
                        .HasDatabaseName("ix_halls_cinema_id");

                    b.ToTable("halls", null, t =>
                        {
                            t.HasComment("Theatre halls");
                        });
                });

            modelBuilder.Entity("Cinema.HallManager.Data.Models.Hall", b =>
                {
                    b.HasOne("Cinema.HallManager.Data.Models.CinemaTheatre", "Cinema")
                        .WithMany("Halls")
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_halls_cinemas_cinema_id");

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("Cinema.HallManager.Data.Models.CinemaTheatre", b =>
                {
                    b.Navigation("Halls");
                });
#pragma warning restore 612, 618
        }
    }
}
